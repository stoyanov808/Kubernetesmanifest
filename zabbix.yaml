apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost
  labels:
    app: ghost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghost
  template:
    metadata:
      labels:
        app: ghost
    spec:
      containers:
        - name: ghost
          image: ghost:latest
          env:
            - name: url
              value: "https://zab.star-expertise.local"  # Use HTTPS for the domain
            - name: database__client
              value: "mysql"  # Use MySQL or SQLite (for example)
            - name: database__connection__host
              value: "mysql-db-service"  # MySQL service name
            - name: database__connection__user
              value: "ghost_user"  # MySQL user
            - name: database__connection__password
              valueFrom:
                secretKeyRef:
                  name: ghost-db-secrets
                  key: mysql-password  # Secret containing MySQL password
            - name: database__connection__database
              value: "ghost_db"  # MySQL database name
          ports:
            - containerPort: 2368
          volumeMounts:
            - name: ghost-data
              mountPath: /var/lib/ghost/content
      volumes:
        - name: ghost-data
          persistentVolumeClaim:
            claimName: ghost-pvc  # Persistent volume claim for Ghost data

---
apiVersion: v1
kind: Service
metadata:
  name: ghost-service
spec:
  selector:
    app: ghost
  ports:
    - protocol: TCP
      port: 80
      targetPort: 2368  # Forwarding to Ghost's port 2368
  type: ClusterIP  # Internal service; Ingress will expose it externally

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ghost-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"  # Ensure HTTPS redirection
    nginx.ingress.kubernetes.io/rewrite-target: "/"  # Handle path rewrites if necessary
spec:
  rules:
    - host: zab.star-expertise.local  # The domain for your Ghost blog
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ghost-service  # The service that exposes Ghost
                port:
                  number: 80  # Port that Ingress should forward to
  tls:
    - hosts:
        - zab.star-expertise.local  # The domain for which TLS should be applied
      secretName: zabix-ingress-cert  # Name of the TLS secret for HTTPS

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ghost-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi  # Adjust the size based on your needs

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-db-secrets
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: "ghost_db"
            - name: MYSQL_USER
              value: "ghost_user"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ghost-db-secrets
                  key: mysql-password
          ports:
            - containerPort: 3306

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-db-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
